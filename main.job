#!/bin/bash

#SBATCH --job-name=main  
#SBATCH --output=%x.%j.out      # Name of output file (%j expands to jobId)
#SBATCH --cpus-per-task=8        # Schedule 8 cores (includes hyperthreading)
#SBATCH --gres=gpu:rtx8000:1          # Schedule a GPU, or more with gpu:2 etc
#SBATCH --time=24:00:00          # Run time (hh:mm:ss) - run for one hour max
#SBATCH --partition=brown   # Run on either the Red or Brown queue
#SBATCH --mail-type=END

DATASET="2k"
EVAL_DATASET=lotr_test
TRAIN_EPOCHS=5
TAG_SCHEME="io"
ENSEMBLE_MODELS=3
ENSEMBLE_EPOCHS=10
SELF_EPOCHS=5
q=0.7
tau=0.7

noise_train_lr=3e-5
ensemble_train_lr=1e-5
self_train_lr=5e-7

while [[ $# -gt 0 ]]; do
  case $1 in
    -d|--dataset)
      DATASET="$2"
      shift # past argument
      shift # past value
      ;;
    -e|--eval_dataset)
      EVAL_DATASET="$2"
      shift # past argument
      shift # past value
      ;;
    -te|--train_epochs)
      TRAIN_EPOCHS="$2"
      shift # past argument
      shift # past value
      ;;
    -ts|--tag_scheme)
      TAG_SCHEME="$2"
      shift # past argument
      shift # past value
      ;;
    -em|--ensemble_models)
      ENSEMBLE_MODELS="$2"
      shift # past argument
      shift # past value
      ;;
    -ee|--ensemble_epochs)
      ENSEMBLE_EPOCHS="$2"
      shift # past argument
      shift # past value
      ;;
    -se|--self_train_epochs)
      SELF_EPOCHS="$2"
      shift # past argument
      shift # past value
      ;;
    -q|--q_value)
      q="$2"
      shift # past argument
      shift # past value
      ;;
    -t|--tau)
      tau="$2"
      shift # past argument
      shift # past value
      ;;
    -tlr|--noise_train_lr)
      noise_train_lr="$2"
      shift # past argument
      shift # past value
      ;;
    -elr|--ensemble_train_lr)
      ensemble_train_lr="$2"
      shift # past argument
      shift # past value
      ;;
    -slr|--self_train_lr)
      self_train_lr="$2"
      shift # past argument
      shift # past value
      ;;
    *)
      echo "Invalid argument: $1"
      shift # past argument
      ;;
  esac
done

echo "Running on $(hostname):"

module load Anaconda3/
eval "$(conda shell.bash hook)"
conda activate 2yp
bash src/sh/baseline.sh -d $DATASET -e $EVAL_DATASET -te $TRAIN_EPOCHS -ts \
 $TAG_SCHEME -em $ENSEMBLE_MODELS -ee $ENSEMBLE_EPOCHS \
 -se $SELF_EPOCHS -t $tau -q $q \
 -tlr $noise_train_lr -elr $ensemble_train_lr -slr $self_train_lr
